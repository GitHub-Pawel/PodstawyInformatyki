#include <iostream>
using namespace std;

class vector2d{
	private:
		float *x1_;
		float *x2_;

    public:
        vector2d(void); //constructor - declaration

        ~vector2d(void); //destructor - declaration

        void set_x1 (float);
        void set_x2 (float); //setters - declarations

        float get_x1 (void);
        float get_x2 (void); //getters - declarations

		void print2d (void);
		void add(vector2d &);
};

vector2d::vector2d(void) //constructor - definition
:x1_(new float), x2_(new float){
}

vector2d::~vector2d(void){ //destructor - definition
    delete x1_;
    delete x2_;
}

void vector2d::set_x1(float x1){
    *x1_=x1;
}

void vector2d::set_x2(float x2){ //setters - definitions
    *x2_=x2;
}

float vector2d::get_x1(void){
    return *x1_;
}

float vector2d::get_x2(void){ //getters - definitions
    return *x2_;
}



void vector2d::print2d (void){
	cout << "x1 = " << get_x1() << endl;
	//cout << "x1 = " << *x1_ << endl;

	cout << "x2 = " << get_x2() << endl << endl;
	//cout << "x2 = " << *x2_ << endl;
}

void vector2d::add(vector2d &arg){
	*x1_ += arg.get_x1();
	//*x1_ += *(arg.x1_);

	*x2_ += arg.get_x2();
	//*x2_ += *(arg.x2_);
}


int main(){
	vector2d vector_1;
	float v1_x1, v1_x2;
	cin >> v1_x1 >> v1_x2;
	vector_1.set_x1(v1_x1);
	vector_1.set_x2(v1_x2);
	vector_1.print2d();

	vector2d vector_2;
	float v2_x1, v2_x2;
	cin >> v2_x1 >> v2_x2;
	vector_2.set_x1(v2_x1);
	vector_2.set_x2(v2_x2);
	vector_2.print2d();

	vector_2.add(vector_1);
	vector_2.print2d();

	return 0;
}

